datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model account {
  id                       String    @id
  account_id               String
  provider_id              String
  user_id                  String
  access_token             String?
  refresh_token            String?
  id_token                 String?
  access_token_expires_at  DateTime? @db.Timestamp(6)
  refresh_token_expires_at DateTime? @db.Timestamp(6)
  scope                    String?
  password                 String?
  created_at               DateTime  @db.Timestamp(6)
  updated_at               DateTime  @db.Timestamp(6)
  user                     user      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "account_user_id_user_id_fk")
}

model session {
  id         String   @id
  expires_at DateTime @db.Timestamp(6)
  token      String   @unique(map: "session_token_unique")
  created_at DateTime @db.Timestamp(6)
  updated_at DateTime @db.Timestamp(6)
  ip_address String?
  user_agent String?
  user_id    String
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "session_user_id_user_id_fk")
}

model user {
  id             String    @id
  name           String
  email          String    @unique(map: "user_email_unique")
  email_verified Boolean
  image          String?
  created_at     DateTime  @db.Timestamp(6)
  updated_at     DateTime  @db.Timestamp(6)
  account        account[]
  session        session[]
}

model verification {
  id         String    @id
  identifier String
  value      String
  expires_at DateTime  @db.Timestamp(6)
  created_at DateTime? @db.Timestamp(6)
  updated_at DateTime? @db.Timestamp(6)
}

model Author {
  id   Int     @id @default(autoincrement())
  name String
  bio  String?

  @@map("authors")
}
